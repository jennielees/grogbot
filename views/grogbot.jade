header#overview
  .page-header
    h1 Grogbot
      small  Make a drink
  .page-header
    h1 HTML5 WebSocket Interface
      small Using Socket.IO and Node.js
  .row.interface#controls
    .span12
      .btn-toolbar(style="margin-bottom: 9px")
        .btn-group
          a.btn(href="#")#connect
            i.icon-refresh
            |  Connect to Arduino
        .btn-group
          a.btn(href="#")#makedrink
            i.icon-glass
            |  Make a drink
        .btn-group
          input.range#interval-slide(type="range", min="0", max="255", step="1", value="0")

  .row.info#connection-status
    .span12
      .alert.alert-info Please connect to your Arduino using the button.
      .alert.hide.alert-error Unable to connect to Arduino!
      .alert.hide.alert-success Connection to Arduino established!
  .row.debug
    .span12
      pre#connection-log
        .item $ > Not connected to noduino!
  .row
    .span12
      p This interface is defined in
        code views/grogbot.jade
        | , all needed JavaScript is stored in
        code public/scripts/grogbot.js
        |  using
        a(href="http://requirejs.org/") RequireJS
        |  for loading dependencies. Please see RequireJS's manual for loading your scripts. Logging is done with the customized
        code Logger.HTML.js
        |  in
        code scripts/libs/
        | .

  .page-header
    h1 Just Node.js
      small Access Arduino components without HTML5 interface
  .row
    .span12
      p Test the included HTML web interface and the Node.js access as well. Connect your Arduino to you computer and start catching events happening on your Arduino with JavaScript. For sure you can easily fire events on your Arduino too!
      pre
        | $ > git clone git@github.com:semu/noduino.git
        | $ > cd noduino/
        | $ > git submodule update --init
        | $ > npm install
        | $ > cd examples/
        | $ > node grogbot.js
